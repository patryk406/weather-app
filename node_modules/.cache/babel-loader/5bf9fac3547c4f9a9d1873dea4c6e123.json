{"ast":null,"code":"var _jsxFileName = \"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Weather from './app_component/weather.component';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //api.openweathermap.org/data/2.5/weather?q=London\n\nconst API_key = 'e614a40be0d49993168759d8b8e25e37';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calcCelsius(response.main.temp),\n        temp_max: this.calcCelsius(response.main.temp_max),\n        temp_min: this.calcCelsius(response.main.temp_min),\n        description: response.weather[0].main\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: '',\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calcCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Wsio/GitProjects/weather-app/src/App.js"],"names":["React","Weather","API_key","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calcCelsius","main","temp","temp_max","temp_min","description","weather","state","undefined","icon","error","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,WAAP;AAEA,OAAO,qCAAP;AACA,OAAO,sCAAP,C,CAEA;;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,UApBc,GAoBD,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4EAC0CN,OAD1C,EAA5B;AAGA,YAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcC,IAA/B,CAHG;AAIZC,QAAAA,QAAQ,EAAE,KAAKH,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcE,QAA/B,CAJE;AAKZC,QAAAA,QAAQ,EAAE,KAAKJ,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcG,QAA/B,CALE;AAMZC,QAAAA,WAAW,EAAEf,QAAQ,CAACgB,OAAT,CAAiB,CAAjB,EAAoBL;AANrB,OAAd;AAQD,KAlCa;;AAEZ,SAAKM,KAAL,GAAa;AACXZ,MAAAA,IAAI,EAAEa,SADK;AAEXX,MAAAA,OAAO,EAAEW,SAFE;AAGXC,MAAAA,IAAI,EAAED,SAHK;AAIXP,MAAAA,IAAI,EAAEO,SAJK;AAKXT,MAAAA,OAAO,EAAES,SALE;AAMXL,MAAAA,QAAQ,EAAEK,SANC;AAOXJ,MAAAA,QAAQ,EAAEI,SAPC;AAQXH,MAAAA,WAAW,EAAE,EARF;AASXK,MAAAA,KAAK,EAAE;AATI,KAAb;AAWA,SAAKvB,UAAL;AACD;;AAEDa,EAAAA,WAAW,CAACE,IAAD,EAAO;AAChB,QAAIS,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWX,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOS,IAAP;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWZ,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWV,OAFtB;AAGE,MAAA,YAAY,EAAE,KAAKU,KAAL,CAAWR,OAH3B;AAIE,MAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWJ,QAJvB;AAKE,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWH,QALvB;AAME,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWF,WAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AAjD+B;;AAmDlC,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport Weather from './app_component/weather.component';\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//api.openweathermap.org/data/2.5/weather?q=London\nconst API_key = 'e614a40be0d49993168759d8b8e25e37';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: '',\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calcCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n  getWeather = async () => {\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`\n    );\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius: this.calcCelsius(response.main.temp),\n      temp_max: this.calcCelsius(response.main.temp_max),\n      temp_min: this.calcCelsius(response.main.temp_min),\n      description: response.weather[0].main\n    });\n  };\n  render() {\n    return (\n      <div className='App'>\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}