{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Wsio\\\\GitProjects\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Weather from'./app_component/weather.component';import Form from'./app_component/form.component';import'./App.css';import'weather-icons/css/weather-icons.css';import'bootstrap/dist/css/bootstrap.min.css';//api.openweathermap.org/data/2.5/weather?q=London\nvar API_key='e614a40be0d49993168759d8b8e25e37';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));//defining state to our app, then sending them to rendering section and to our app after seting needed data\n_this.getWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var city,country,api_call,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();city=e.target.elements.city.value;country=e.target.elements.country.value;if(!(city&&country)){_context.next=15;break;}_context.next=6;return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\",\").concat(country,\"&appid=\").concat(API_key));case 6:api_call=_context.sent;_context.next=9;return api_call.json();case 9:response=_context.sent;console.log(response);_this.setState({city:\"\".concat(response.name,\", \").concat(response.sys.country),celsius:_this.calcCelsius(response.main.temp),temp_max:_this.calcCelsius(response.main.temp_max),temp_min:_this.calcCelsius(response.main.temp_min),description:response.weather[0].main});_this.get_WeatherIcon(_this.weatherIcon,response.weather[0].id);_context.next=16;break;case 15:_this.setState.error='true';case 16:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={city:undefined,country:undefined,icon:undefined,main:undefined,celsius:undefined,temp_max:undefined,temp_min:undefined,description:'',error:false};//setting icons for our app.\n_this.weatherIcon={Thunderstorm:'wi-thunderstorm',Drizzle:'wi-sleet',Rain:'wi-storm-shower',Snow:'wi-snow',Atmosphere:'wi-fog',Clear:'wi-day-sunny',Clouds:'wi-day-fog'};return _this;}//changing F to celsius.\n_createClass(App,[{key:\"calcCelsius\",value:function calcCelsius(temp){var cell=Math.floor(temp-273.15);return cell;}//Specific parrameters to set corect icon for our app.\n//nesting needed data to link for our app.\n},{key:\"get_WeatherIcon\",value:function get_WeatherIcon(icons,rangeId){switch(true){case rangeId>=200&&rangeId<=232:this.setState({icon:this.weatherIcon.Thunderstorm});break;case rangeId>=300&&rangeId<=321:this.setState({icon:this.weatherIcon.Drizzle});break;case rangeId>=500&&rangeId<=531:this.setState({icon:this.weatherIcon.Rain});break;case rangeId>=600&&rangeId<=622:this.setState({icon:this.weatherIcon.Snow});break;case rangeId>=701&&rangeId<=781:this.setState({icon:this.weatherIcon.Atmosphere});break;case rangeId===800:this.setState({icon:this.weatherIcon.Clear});break;case rangeId>=801&&rangeId<=804:this.setState({icon:this.weatherIcon.Clouds});break;default:this.setState({icon:this.weatherIcon.Clouds});}}},{key:\"render\",//Rendering properties from weather and reforming them using the data from serv then setting to our app.\nvalue:function render(){return React.createElement(\"div\",{className:\"App\"},React.createElement(Form,{loadweather:this.getWeather,error:this.error}),React.createElement(Weather,{city:this.state.city,country:this.state.country,temp_celsius:this.state.celsius,temp_max:this.state.temp_max,temp_min:this.state.temp_min,description:this.state.description,weatherIcon:this.state.icon}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Wsio/GitProjects/weather-app/src/App.js"],"names":["React","Weather","Form","API_key","App","getWeather","e","preventDefault","city","target","elements","value","country","fetch","api_call","json","response","console","log","setState","name","sys","celsius","calcCelsius","main","temp","temp_max","temp_min","description","weather","get_WeatherIcon","weatherIcon","id","error","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeId","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component';\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//api.openweathermap.org/data/2.5/weather?q=London\nconst API_key = 'e614a40be0d49993168759d8b8e25e37';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    //defining state to our app, then sending them to rendering section and to our app after seting needed data\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: '',\n      error: false\n    };\n    //setting icons for our app.\n    this.weatherIcon = {\n      Thunderstorm: 'wi-thunderstorm',\n      Drizzle: 'wi-sleet',\n      Rain: 'wi-storm-shower',\n      Snow: 'wi-snow',\n      Atmosphere: 'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog'\n    };\n  }\n  //changing F to celsius.\n  calcCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n  //Specific parrameters to set corect icon for our app.\n\n  //nesting needed data to link for our app.\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  }\n  getWeather = async e => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    if (city && country) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n      );\n      // Waiting fo response from serv , setting properties to our data from feedback.\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        celsius: this.calcCelsius(response.main.temp),\n        temp_max: this.calcCelsius(response.main.temp_max),\n        temp_min: this.calcCelsius(response.main.temp_min),\n        description: response.weather[0].main\n      });\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n    } else {\n      this.setState.error = 'true';\n    }\n  };\n\n  //Rendering properties from weather and reforming them using the data from serv then setting to our app.\n  render() {\n    return (\n      <div className='App'>\n        <Form loadweather={this.getWeather} error={this.error} />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}